/*
	
	Following the structure used for Binary Tree
	
	class BinaryTreeNode<T> {
		T data;
		BinaryTreeNode<T> left;
		BinaryTreeNode<T> right;

		public BinaryTreeNode(T data) {
			this.data = data;
			this.left = null;
			this.right = null;
		}
	}

 */

public class Solution {

	public static void postOrder(BinaryTreeNode<Integer> root) {
		//Your code goes here
		if (root == null)
            return;

        // Traverse left subtree
        postOrder(root.left);

        // Traverse right subtree
        postOrder(root.right);

        // Print the root node's data
        System.out.print(root.data + " ");
	}

}